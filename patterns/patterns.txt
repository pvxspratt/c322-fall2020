Overview:


1. Null Object

2. Singleton
    A class of which only a single instance can exist

3. Iterator

4. Observer

5. Strategy

6. Composite

7. Decorator

8. Template Method

9. Facade

10. Bridge

11. Prototype
    A fully initialized instance to be copied or cloned

12. Singleton

13. Adapter

14. Command

15. Factory Method
    Creates an instance of several derived classes

16. Abstract Factory
    Creates an instance of several families of classes
    
17. Builder
    Separates object construction from its representation

18. Flyweight

19. Proxy

20. Chain of Responsibility

21. Interpreter

22. Mediator

23. Memento

24. State

25. Visitor

26. Compound



















Creational patterns:

Abstract Factory 
  Creates an instance of several families of classes
Builder 
  Separates object construction from its representation
Factory Method 
  Creates an instance of several derived classes
Prototype 
  A fully initialized instance to be copied or cloned
Singleton 
  A class of which only a single instance can exist

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

Structural patterns:

Adapter 
  Match interfaces of different classes
Bridge 
  Separates an object’s interface from its implementation
Composite 
  A tree structure of simple and composite objects
Decorator 
  Add responsibilities to objects dynamically
Façade 
  A single class that represents an entire subsystem
Flyweight 
  A fine-grained instance used for efficient sharing
Proxy 
  An object representing another object
  
  
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

Behavioral patterns:

Chain of responsibility 
  A way of passing a request between a chain of objects
Command 
  Encapsulate a command request as an object
Interpreter 
  A way to include language elements in a program
Iterator 
  Sequentially access the elements of a collection
Mediator 
  Defines simplified communication between classes
Memento 
  Capture and restore an object's internal state
Null Object 
  Designed to act as a default value of an object
Observer 
  A way of notifying change to a number of classes
State 
  Alter an object's behavior when its state changes
Strategy 
  Encapsulates an algorithm inside a class
Template method 
  Defer the exact steps of an algorithm to a subclass
Visitor 
  Defines a new operation to a class without change



Compound 













































